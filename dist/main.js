(()=>{"use strict";const e=async function(e,t){const n=await async function(e,t){return(await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e}&units=${t}&APPID=8d838cab2623bf0e4ccf3c4d32eab7bb`,{mode:"cors"})).json()}(e,t);return function(e){if("404"===e.cod)throw new Error("City not found");const t=e.name,{country:n}=e.sys,{temp:i}=e.main,r=e.weather[0].main;return{city:t,country:n,temp:i,weather:r,keyword:r}}(n)},t=async function(e){const t=await async function(e){return(await fetch(`https://api.giphy.com/v1/gifs/translate?api_key=ieAImKLCMr3MRyKct42s8BMVBEdSgL0A&s=${e}`,{mode:"cors"})).json()}(e);return function(e){return e.data.images.original.url}(t)},n=/^[a-z]{2}$/i;const i=function(e,t,n){e.innerText="";const i=document.createElement("form");e.appendChild(i);const r=document.createElement("label");i.appendChild(r),r.innerText="City";const o=document.createElement("input");r.appendChild(o),o.setAttribute("name","city"),o.toggleAttribute("required");const c=document.createElement("label");i.appendChild(c),c.innerText="Units";const a=(e,t,n,i)=>{const r=document.createElement("label");c.appendChild(r),r.innerText=e;const o=document.createElement("input");return r.appendChild(o),o.setAttribute("type","radio"),o.setAttribute("name",n),o.value=t,i&&o.toggleAttribute("checked"),[r,o]},[d,s]=a("Celcius","metric","units",!0),[u,l]=a("Farenheit","imperial","units",!1),m=document.createElement("input");i.appendChild(m),m.setAttribute("type","submit"),m.value="Submit",m.addEventListener("click",(e=>{if(!o.validity.valid)return!1;e.preventDefault();const t=new FormData(i);n(t.get("city"),t.get("units"))}))},r=function(e,t){t.innerText="";const n=document.createElement("div");t.appendChild(n),n.className="error-box",n.innerText="Now Loading..."},o=function(e,t,i,r){t.innerText="";const o=function(e){if(!n.test(e)){const t=typeof e;throw new TypeError(`cc argument must be an ISO 3166-1 alpha-2 string, but got '${"string"===t?e:t}' instead.`)}const t=[...e.toUpperCase()].map((e=>e.codePointAt()+127397));return String.fromCodePoint(...t)}(i.country),c=document.createElement("div");t.appendChild(c),c.innerText=`${i.city} ${o}`;const a=document.createElement("div");t.appendChild(a),a.innerText=i.temp;const d=document.createElement("div");t.appendChild(d),d.innerText=i.weather,r.then((e=>{console.log("image to load: ",e);const n=document.createElement("img");t.appendChild(n),n.setAttribute("src",e),n.setAttribute("alt",`Image of ${i.weather}`)}))},c=function(e,t,n){t.innerText="";const i=document.createElement("div");t.appendChild(i),i.className="error-box",i.innerText="Failed to find results. Please check your inputs and try again"},a=document.querySelector("#dom-inputs"),d=document.querySelector("#dom-outputs");i(a,d,((n,i)=>{r(a,d),e(n,i).then((e=>{console.log(e);const n=t(e.keyword);o(a,d,e,n)}),(e=>{c(a,d)}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,