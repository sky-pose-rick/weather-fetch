(()=>{"use strict";const e=async function(e,t){const n=await async function(e,t){return await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e}&units=${t}&APPID=8d838cab2623bf0e4ccf3c4d32eab7bb`,{mode:"cors"}).then((e=>e.json())).then((e=>e))}(e,t);return function(e){const t=e.name,{country:n}=e.sys,{temp:o}=e.main,i=e.weather[0].main,c=i;return console.log("Location: ",t),console.log("Country: ",n),console.log("Temperature: ",o),console.log("Weather: ",i),{city:t,country:n,temp:o,weather:i,keyword:c}}(n)},t=async function(e,t){return(await async function(e){return await fetch(`https://api.giphy.com/v1/gifs/translate?api_key=ieAImKLCMr3MRyKct42s8BMVBEdSgL0A&s=${e}`,{mode:"cors"}).then((e=>e.json())).then((e=>e))}(e)).data.images.original.url},n=/^[a-z]{2}$/i;const o=function(e,t,n){e.innerText="";const o=document.createElement("form");e.appendChild(o);const i=document.createElement("label");o.appendChild(i),i.innerText="City";const c=document.createElement("input");i.appendChild(c),c.setAttribute("name","city"),c.toggleAttribute("required");const r=document.createElement("label");o.appendChild(r),r.innerText="Units";const a=(e,t,n,o)=>{const i=document.createElement("label");r.appendChild(i),i.innerText=e;const c=document.createElement("input");return i.appendChild(c),c.setAttribute("type","radio"),c.setAttribute("name",n),c.value=t,o&&c.toggleAttribute("checked"),[i,c]},[u,s]=a("Celcius","metric","units",!0),[d,l]=a("Farenheit","imperial","units",!1),m=document.createElement("input");o.appendChild(m),m.setAttribute("type","submit"),m.value="Submit",m.addEventListener("click",(e=>{if(!c.validity.valid)return!1;e.preventDefault();const t=new FormData(o);n(t.get("city"),t.get("units"))}))},i=function(e,t){t.innerText="Now Loading..."},c=function(e,t,o,i){t.innerText="",console.log("image to load: ",i);const c=function(e){if(!n.test(e)){const t=typeof e;throw new TypeError(`cc argument must be an ISO 3166-1 alpha-2 string, but got '${"string"===t?e:t}' instead.`)}const t=[...e.toUpperCase()].map((e=>e.codePointAt()+127397));return String.fromCodePoint(...t)}(o.country),r=document.createElement("div");t.appendChild(r),r.innerText=`${o.city} ${c}`;const a=document.createElement("div");t.appendChild(a),a.innerText=o.temp;const u=document.createElement("div");t.appendChild(u),u.innerText=o.weather;const s=document.createElement("img");t.appendChild(s),s.setAttribute("src",i)},r=document.querySelector("#dom-inputs"),a=document.querySelector("#dom-outputs");o(r,a,((n,o)=>{i(r,a),e(n,o).then((e=>{t(e.keyword).then((t=>{c(r,a,e,t)}))})).catch((e=>{console.log("failed to get weather")}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,